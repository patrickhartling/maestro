// qlabel.sip generated by MetaSIP on Wed Oct 11 03:37:27 2006
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2006
// 	Riverbank Computing Limited <info@riverbankcomputing.co.uk>
// 
// This file is part of PyQt.
// 
// This copy of PyQt is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2, or (at your option) any later
// version.
// 
// PyQt is supplied in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
// 
// You should have received a copy of the GNU General Public License along with
// PyQt; see the file LICENSE.  If not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


class QLabel : QFrame
{

%TypeHeaderCode
#include <qlabel.h>
%End

public:
    QLabel(QWidget *parent /TransferThis/ = 0, Qt::WFlags f = 0);
    QLabel(const QString &text, QWidget *parent /TransferThis/ = 0, Qt::WFlags f = 0);
    virtual ~QLabel();
    QString text() const;
    const QPixmap *pixmap() const;
    const QPicture *picture() const;
    QMovie *movie() const;
    Qt::TextFormat textFormat() const;
    void setTextFormat(Qt::TextFormat);
    Qt::Alignment alignment() const;
    void setAlignment(Qt::Alignment);
    void setWordWrap(bool on);
    bool wordWrap() const;
    int indent() const;
    void setIndent(int);
    int margin() const;
    void setMargin(int);
    bool hasScaledContents() const;
    void setScaledContents(bool);
    virtual QSize sizeHint() const;
    virtual QSize minimumSizeHint() const;
    void setBuddy(QWidget *);
    QWidget *buddy() const;
    virtual int heightForWidth(int) const;
    void setText(const QString &);
    void setPixmap(const QPixmap &);
    void setPicture(const QPicture &);
    void setMovie(QMovie *movie);
    void setNum(double /Constrained/);
    void setNum(int);
    void clear();

protected:
    virtual bool event(QEvent *e);
    virtual void paintEvent(QPaintEvent *);
    virtual void changeEvent(QEvent *);

private:
    QLabel(const QLabel &);
};
