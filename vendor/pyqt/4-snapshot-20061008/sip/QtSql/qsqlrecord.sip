// qsqlrecord.sip generated by MetaSIP on Wed Oct 11 03:37:28 2006
//
// This file is part of the QtSql Python extension module.
//
// Copyright (c) 2006
// 	Riverbank Computing Limited <info@riverbankcomputing.co.uk>
// 
// This file is part of PyQt.
// 
// This copy of PyQt is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2, or (at your option) any later
// version.
// 
// PyQt is supplied in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
// 
// You should have received a copy of the GNU General Public License along with
// PyQt; see the file LICENSE.  If not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


class QSqlRecord
{

%TypeHeaderCode
#include <qsqlrecord.h>
%End

public:
    QSqlRecord();
    QSqlRecord(const QSqlRecord &other);
    ~QSqlRecord();
    bool operator==(const QSqlRecord &other) const;
    bool operator!=(const QSqlRecord &other) const;
    QVariant value(int i) const;
    QVariant value(const QString &name) const;
    void setValue(int i, const QVariant &val);
    void setValue(const QString &name, const QVariant &val);
    void setNull(int i);
    void setNull(const QString &name);
    bool isNull(int i) const;
    bool isNull(const QString &name) const;
    int indexOf(const QString &name) const;
    QString fieldName(int i) const;
    QSqlField field(int i) const;
    QSqlField field(const QString &name) const;
    bool isGenerated(int i) const;
    bool isGenerated(const QString &name) const;
    void setGenerated(const QString &name, bool generated);
    void setGenerated(int i, bool generated);
    void append(const QSqlField &field);
    void replace(int pos, const QSqlField &field);
    void insert(int pos, const QSqlField &field);
    void remove(int pos);
    bool isEmpty() const;
    bool contains(const QString &name) const;
    void clear();
    void clearValues();
    int count() const;
};
