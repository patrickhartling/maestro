// qlayout.sip generated by MetaSIP on Wed Oct 11 03:37:27 2006
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2006
// 	Riverbank Computing Limited <info@riverbankcomputing.co.uk>
// 
// This file is part of PyQt.
// 
// This copy of PyQt is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2, or (at your option) any later
// version.
// 
// PyQt is supplied in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
// 
// You should have received a copy of the GNU General Public License along with
// PyQt; see the file LICENSE.  If not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


class QLayout : QObject, QLayoutItem
{

%TypeHeaderCode
#include <qlayout.h>
%End

public:
    enum SizeConstraint
    {
        SetDefaultConstraint,
        SetNoConstraint,
        SetMinimumSize,
        SetFixedSize,
        SetMaximumSize,
        SetMinAndMaxSize,
    };

    QLayout(QWidget *parent /TransferThis/);
    QLayout();
    virtual ~QLayout();
    int margin() const;
    int spacing() const;
    void setMargin(int);
    void setSpacing(int);
    bool setAlignment(QWidget *w, Qt::Alignment alignment);
    bool setAlignment(QLayout *l, Qt::Alignment alignment);
    void setAlignment(Qt::Alignment alignment);
    void setSizeConstraint(QLayout::SizeConstraint);
    QLayout::SizeConstraint sizeConstraint() const;
    void setMenuBar(QWidget *w);
    QWidget *menuBar() const;
    QWidget *parentWidget() const;
    virtual void invalidate();
    virtual QRect geometry() const;
    bool activate();
    void update();
    void addWidget(QWidget *w /Transfer/);
    virtual void addItem(QLayoutItem * /Transfer/) = 0;
    void removeWidget(QWidget *w /TransferBack/);
    void removeItem(QLayoutItem * /TransferBack/);
    virtual Qt::Orientations expandingDirections() const;
    virtual QSize minimumSize() const;
    virtual QSize maximumSize() const;
    virtual void setGeometry(const QRect &);
    virtual QLayoutItem *itemAt(int index) const = 0;
    virtual QLayoutItem *takeAt(int index) = 0 /TransferBack/;
    virtual int indexOf(QWidget *) const;
    virtual int count() const = 0;
    virtual bool isEmpty() const;
    int totalHeightForWidth(int w) const;
    QSize totalMinimumSize() const;
    QSize totalMaximumSize() const;
    QSize totalSizeHint() const;
    virtual QLayout *layout();
    void setEnabled(bool);
    bool isEnabled() const;
    static QSize closestAcceptableSize(const QWidget *w, const QSize &s);

protected:
    void widgetEvent(QEvent *);
    virtual void childEvent(QChildEvent *e);
    void addChildLayout(QLayout *l /Transfer/);
    void addChildWidget(QWidget *w /Transfer/);
    QRect alignmentRect(const QRect &) const;

private:
    QLayout(const QLayout &);
};
