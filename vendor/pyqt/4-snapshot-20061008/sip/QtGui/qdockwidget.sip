// qdockwidget.sip generated by MetaSIP on Wed Oct 11 03:37:27 2006
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2006
// 	Riverbank Computing Limited <info@riverbankcomputing.co.uk>
// 
// This file is part of PyQt.
// 
// This copy of PyQt is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2, or (at your option) any later
// version.
// 
// PyQt is supplied in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
// 
// You should have received a copy of the GNU General Public License along with
// PyQt; see the file LICENSE.  If not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


%ModuleHeaderCode
#include <qdockwidget.h>
%End


class QDockWidget : QWidget
{

%TypeHeaderCode
#include <qdockwidget.h>
%End

public:
    QDockWidget(const QString &title, QWidget *parent /TransferThis/ = 0, Qt::WFlags flags = 0);
    QDockWidget(QWidget *parent /TransferThis/ = 0, Qt::WFlags flags = 0);
    virtual ~QDockWidget();
    QWidget *widget() const;
    void setWidget(QWidget *widget);

    enum DockWidgetFeature
    {
        DockWidgetClosable,
        DockWidgetMovable,
        DockWidgetFloatable,
        DockWidgetFeatureMask,
        AllDockWidgetFeatures,
        NoDockWidgetFeatures,
        Reserved,
    };

    typedef QFlags<QDockWidget::DockWidgetFeature> DockWidgetFeatures;
    void setFeatures(QFlags<QDockWidget::DockWidgetFeature> features);
    QFlags<QDockWidget::DockWidgetFeature> features() const;
    void setFloating(bool floating);
    bool isFloating() const;
    void setAllowedAreas(Qt::DockWidgetAreas areas);
    Qt::DockWidgetAreas allowedAreas() const;
    bool isAreaAllowed(Qt::DockWidgetArea area) const;
    QAction *toggleViewAction() const;

signals:
    void featuresChanged(QFlags<QDockWidget::DockWidgetFeature> features);
    void topLevelChanged(bool topLevel);
    void allowedAreasChanged(Qt::DockWidgetAreas allowedAreas);

protected:
    virtual void changeEvent(QEvent *event);
    virtual void closeEvent(QCloseEvent *event);
    virtual void paintEvent(QPaintEvent *event);
    virtual bool event(QEvent *event);

private:
    QDockWidget(const QDockWidget &);
};

QFlags<QDockWidget::DockWidgetFeature> operator|(QDockWidget::DockWidgetFeature f1, QFlags<QDockWidget::DockWidgetFeature> f2);
QFlags<QDockWidget::DockWidgetFeature> operator|(QDockWidget::DockWidgetFeature f1, QDockWidget::DockWidgetFeature f2);
