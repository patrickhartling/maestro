// quuid.sip generated by MetaSIP on Wed Oct 11 03:37:27 2006
//
// This file is part of the QtCore Python extension module.
//
// Copyright (c) 2006
// 	Riverbank Computing Limited <info@riverbankcomputing.co.uk>
// 
// This file is part of PyQt.
// 
// This copy of PyQt is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2, or (at your option) any later
// version.
// 
// PyQt is supplied in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
// 
// You should have received a copy of the GNU General Public License along with
// PyQt; see the file LICENSE.  If not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


%ModuleHeaderCode
#include <quuid.h>
%End


struct QUuid
{

%TypeHeaderCode
#include <quuid.h>
%End

    enum Variant
    {
        VarUnknown,
        NCS,
        DCE,
        Microsoft,
        Reserved,
    };

    enum Version
    {
        VerUnknown,
        Time,
        EmbeddedPOSIX,
        Name,
        Random,
    };

    QUuid();
    QUuid(uint l, ushort w1, ushort w2, uchar b1, uchar b2, uchar b3, uchar b4, uchar b5, uchar b6, uchar b7, uchar b8);
    QUuid(const QString &);
    QString toString() const;
    bool isNull() const;
    bool operator==(const QUuid &orig) const;
    bool operator!=(const QUuid &orig) const;
    bool operator<(const QUuid &other) const;
    bool operator>(const QUuid &other) const;
    static QUuid createUuid();
    QUuid::Variant variant() const;
    QUuid::Version version() const;
    operator QString() const;
};

QDataStream &operator<<(QDataStream &, const QUuid & /Constrained/);
QDataStream &operator>>(QDataStream &, QUuid & /Constrained/);
