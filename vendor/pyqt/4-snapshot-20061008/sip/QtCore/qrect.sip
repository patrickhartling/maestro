// qrect.sip generated by MetaSIP on Wed Oct 11 03:37:27 2006
//
// This file is part of the QtCore Python extension module.
//
// Copyright (c) 2006
// 	Riverbank Computing Limited <info@riverbankcomputing.co.uk>
// 
// This file is part of PyQt.
// 
// This copy of PyQt is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2, or (at your option) any later
// version.
// 
// PyQt is supplied in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
// 
// You should have received a copy of the GNU General Public License along with
// PyQt; see the file LICENSE.  If not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


%ModuleHeaderCode
#include <qrect.h>
%End


class QRect
{

%TypeHeaderCode
#include <qrect.h>
%End

public:
    QRect();
    QRect normalized() const;
    void moveCenter(const QPoint &p);
    QRect operator|(const QRect &r) const;
    QRect operator&(const QRect &r) const;
    bool contains(const QPoint &p, bool proper = false) const;
    int __contains__(const QPoint &p) const;
%MethodCode
        sipRes = sipCpp->contains(*a0);
%End

    bool contains(const QRect &r, bool proper = false) const;
    int __contains__(const QRect &r) const;
%MethodCode
        sipRes = sipCpp->contains(*a0);
%End

    bool intersects(const QRect &r) const;
    QRect(int aleft, int atop, int awidth, int aheight);
    QRect(const QPoint &atopLeft, const QPoint &abottomRight);
    QRect(const QPoint &atopLeft, const QSize &asize);
    bool isNull() const;
    bool isEmpty() const;
    bool isValid() const;
    int __nonzero__() const;
%MethodCode
        sipRes = sipCpp->isValid();
%End

    int left() const;
    int top() const;
    int right() const;
    int bottom() const;
    int x() const;
    int y() const;
    void setLeft(int pos);
    void setTop(int pos);
    void setRight(int pos);
    void setBottom(int pos);
    void setTopLeft(const QPoint &p);
    void setBottomRight(const QPoint &p);
    void setTopRight(const QPoint &p);
    void setBottomLeft(const QPoint &p);
    void setX(int ax);
    void setY(int ay);
    QPoint topLeft() const;
    QPoint bottomRight() const;
    QPoint topRight() const;
    QPoint bottomLeft() const;
    QPoint center() const;
    int width() const;
    int height() const;
    QSize size() const;
    void translate(int dx, int dy);
    void translate(const QPoint &p);
    QRect translated(int dx, int dy) const;
    QRect translated(const QPoint &p) const;
    void moveTo(int ax, int ay);
    void moveTo(const QPoint &p);
    void moveLeft(int pos);
    void moveTop(int pos);
    void moveRight(int pos);
    void moveBottom(int pos);
    void moveTopLeft(const QPoint &p);
    void moveBottomRight(const QPoint &p);
    void moveTopRight(const QPoint &p);
    void moveBottomLeft(const QPoint &p);
    void getRect(int *ax, int *ay, int *aw, int *ah) const;
    void setRect(int ax, int ay, int aw, int ah);
    void getCoords(int *xp1, int *yp1, int *xp2, int *yp2) const;
    void setCoords(int xp1, int yp1, int xp2, int yp2);
    QRect adjusted(int xp1, int yp1, int xp2, int yp2) const;
    void adjust(int dx1, int dy1, int dx2, int dy2);
    void setWidth(int w);
    void setHeight(int h);
    void setSize(const QSize &s);
    bool contains(int ax, int ay, bool aproper) const;
    bool contains(int ax, int ay) const;
    QRect &operator|=(const QRect &r);
    QRect &operator&=(const QRect &r);
    QRect intersect(const QRect &r) const;
    QRect unite(const QRect &r) const;
};

QDataStream &operator<<(QDataStream &, const QRect & /Constrained/);
QDataStream &operator>>(QDataStream &, QRect & /Constrained/);
bool operator==(const QRect &r1, const QRect &r2);
bool operator!=(const QRect &r1, const QRect &r2);

class QRectF
{

%TypeHeaderCode
#include <qrect.h>
%End

public:
    QRectF();
    QRectF normalized() const;
    qreal left() const;
    qreal top() const;
    qreal right() const;
    qreal bottom() const;
    void setX(qreal pos);
    void setY(qreal pos);
    QPointF topLeft() const;
    QPointF bottomRight() const;
    QPointF topRight() const;
    QPointF bottomLeft() const;
    QRectF operator|(const QRectF &r) const;
    QRectF operator&(const QRectF &r) const;
    bool contains(const QPointF &p) const;
    int __contains__(const QPointF &p) const;
%MethodCode
        sipRes = sipCpp->contains(*a0);
%End

    bool contains(const QRectF &r) const;
    int __contains__(const QRectF &r) const;
%MethodCode
        sipRes = sipCpp->contains(*a0);
%End

    bool intersects(const QRectF &r) const;
    QRectF(qreal aleft, qreal atop, qreal awidth, qreal aheight);
    QRectF(const QPointF &atopLeft, const QSizeF &asize);
    QRectF(const QRect &r);
    bool isNull() const;
    bool isEmpty() const;
    bool isValid() const;
    int __nonzero__() const;
%MethodCode
        sipRes = sipCpp->isValid();
%End

    qreal x() const;
    qreal y() const;
    void setLeft(qreal pos);
    void setRight(qreal pos);
    void setTop(qreal pos);
    void setBottom(qreal pos);
    void setTopLeft(const QPointF &p);
    void setTopRight(const QPointF &p);
    void setBottomLeft(const QPointF &p);
    void setBottomRight(const QPointF &p);
    QPointF center() const;
    void moveLeft(qreal pos);
    void moveTop(qreal pos);
    void moveRight(qreal pos);
    void moveBottom(qreal pos);
    void moveTopLeft(const QPointF &p);
    void moveTopRight(const QPointF &p);
    void moveBottomLeft(const QPointF &p);
    void moveBottomRight(const QPointF &p);
    void moveCenter(const QPointF &p);
    qreal width() const;
    qreal height() const;
    QSizeF size() const;
    void translate(qreal dx, qreal dy);
    void translate(const QPointF &p);
    void moveTo(qreal ax, qreal ay);
    void moveTo(const QPointF &p);
    QRectF translated(qreal dx, qreal dy) const;
    QRectF translated(const QPointF &p) const;
    void getRect(qreal *ax, qreal *ay, qreal *aaw, qreal *aah) const;
    void setRect(qreal ax, qreal ay, qreal aaw, qreal aah);
    void getCoords(qreal *xp1, qreal *yp1, qreal *xp2, qreal *yp2) const;
    void setCoords(qreal xp1, qreal yp1, qreal xp2, qreal yp2);
    void adjust(qreal xp1, qreal yp1, qreal xp2, qreal yp2);
    QRectF adjusted(qreal xp1, qreal yp1, qreal xp2, qreal yp2) const;
    void setWidth(qreal aw);
    void setHeight(qreal ah);
    void setSize(const QSizeF &s);
    bool contains(qreal ax, qreal ay) const;
    QRectF &operator|=(const QRectF &r);
    QRectF &operator&=(const QRectF &r);
    QRectF intersect(const QRectF &r) const;
    QRectF unite(const QRectF &r) const;
    QRect toRect() const;
};

QDataStream &operator<<(QDataStream &, const QRectF & /Constrained/);
QDataStream &operator>>(QDataStream &, QRectF & /Constrained/);
bool operator==(const QRectF &r1, const QRectF &r2);
bool operator!=(const QRectF &r1, const QRectF &r2);
