// qurlinfo.sip generated by MetaSIP on Wed Oct 11 03:37:28 2006
//
// This file is part of the QtNetwork Python extension module.
//
// Copyright (c) 2006
// 	Riverbank Computing Limited <info@riverbankcomputing.co.uk>
// 
// This file is part of PyQt.
// 
// This copy of PyQt is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2, or (at your option) any later
// version.
// 
// PyQt is supplied in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
// 
// You should have received a copy of the GNU General Public License along with
// PyQt; see the file LICENSE.  If not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


class QUrlInfo
{

%TypeHeaderCode
#include <qurlinfo.h>
%End

public:
    enum PermissionSpec
    {
        ReadOwner,
        WriteOwner,
        ExeOwner,
        ReadGroup,
        WriteGroup,
        ExeGroup,
        ReadOther,
        WriteOther,
        ExeOther,
    };

    QUrlInfo();
    QUrlInfo(const QUrlInfo &ui);
    QUrlInfo(const QString &name, int permissions, const QString &owner, const QString &group, qint64 size, const QDateTime &lastModified, const QDateTime &lastRead, bool isDir, bool isFile, bool isSymLink, bool isWritable, bool isReadable, bool isExecutable);
    QUrlInfo(const QUrl &url, int permissions, const QString &owner, const QString &group, qint64 size, const QDateTime &lastModified, const QDateTime &lastRead, bool isDir, bool isFile, bool isSymLink, bool isWritable, bool isReadable, bool isExecutable);
    virtual ~QUrlInfo();
    virtual void setName(const QString &name);
    virtual void setDir(bool b);
    virtual void setFile(bool b);
    virtual void setSymLink(bool b);
    virtual void setOwner(const QString &s);
    virtual void setGroup(const QString &s);
    virtual void setSize(qint64 size);
    virtual void setWritable(bool b);
    virtual void setReadable(bool b);
    virtual void setPermissions(int p);
    virtual void setLastModified(const QDateTime &dt);
    bool isValid() const;
    QString name() const;
    int permissions() const;
    QString owner() const;
    QString group() const;
    qint64 size() const;
    QDateTime lastModified() const;
    QDateTime lastRead() const;
    bool isDir() const;
    bool isFile() const;
    bool isSymLink() const;
    bool isWritable() const;
    bool isReadable() const;
    bool isExecutable() const;
    static bool greaterThan(const QUrlInfo &i1, const QUrlInfo &i2, int sortBy);
    static bool lessThan(const QUrlInfo &i1, const QUrlInfo &i2, int sortBy);
    static bool equal(const QUrlInfo &i1, const QUrlInfo &i2, int sortBy);
    bool operator==(const QUrlInfo &i) const;
%If (Qt_4_2_0 -)
    bool operator!=(const QUrlInfo &i) const;
%End
};
