// qstylepainter.sip generated by MetaSIP on Wed Oct 11 03:37:27 2006
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2006
// 	Riverbank Computing Limited <info@riverbankcomputing.co.uk>
// 
// This file is part of PyQt.
// 
// This copy of PyQt is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2, or (at your option) any later
// version.
// 
// PyQt is supplied in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
// 
// You should have received a copy of the GNU General Public License along with
// PyQt; see the file LICENSE.  If not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


class QStylePainter : QPainter
{

%TypeHeaderCode
#include <qstylepainter.h>
%End

public:
    QStylePainter();
    explicit QStylePainter(QWidget *w);
    QStylePainter(QPaintDevice *pd, QWidget *w);
    bool begin(QWidget *w);
    bool begin(QPaintDevice *pd, QWidget *w);
    QStyle *style() const;
    void drawPrimitive(QStyle::PrimitiveElement pe, const QStyleOption &opt);
    void drawControl(QStyle::ControlElement ce, const QStyleOption &opt);
    void drawComplexControl(QStyle::ComplexControl cc, const QStyleOptionComplex &opt);
    void drawItemText(const QRect &r, int flags, const QPalette &pal, bool enabled, const QString &text, QPalette::ColorRole textRole = QPalette::NoRole);
    void drawItemPixmap(const QRect &r, int flags, const QPixmap &pixmap);

private:
%If (Qt_4_2_0 -)
    QStylePainter(const QStylePainter &);
%End
};
