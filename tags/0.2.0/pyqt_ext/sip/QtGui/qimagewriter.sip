// qimagewriter.sip generated by MetaSIP on Wed Oct 11 03:37:27 2006
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2006
// 	Riverbank Computing Limited <info@riverbankcomputing.co.uk>
// 
// This file is part of PyQt.
// 
// This copy of PyQt is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2, or (at your option) any later
// version.
// 
// PyQt is supplied in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
// 
// You should have received a copy of the GNU General Public License along with
// PyQt; see the file LICENSE.  If not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


class QImageWriter
{

%TypeHeaderCode
#include <qimagewriter.h>
%End

public:
    enum ImageWriterError
    {
        UnknownError,
        DeviceError,
        UnsupportedFormatError,
    };

    QImageWriter();
    QImageWriter(QIODevice *device, const QByteArray &format);
    QImageWriter(const QString &fileName, const QByteArray &format = QByteArray());
    ~QImageWriter();
    void setFormat(const QByteArray &format);
    QByteArray format() const;
    void setDevice(QIODevice *device);
    QIODevice *device() const;
    void setFileName(const QString &fileName);
    QString fileName() const;
    void setQuality(int quality);
    int quality() const;
    void setGamma(float gamma);
    float gamma() const;
    void setDescription(const QString &description);
    QString description() const;
    bool canWrite() const;
    bool write(const QImage &image) /ReleaseGIL/;
    QImageWriter::ImageWriterError error() const;
    QString errorString() const;
    static QList<QByteArray> supportedImageFormats();
    void setText(const QString &key, const QString &text);

private:
    QImageWriter(const QImageWriter &);
};
