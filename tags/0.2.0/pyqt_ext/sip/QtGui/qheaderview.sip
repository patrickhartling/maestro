// qheaderview.sip generated by MetaSIP on Wed Oct 11 03:37:27 2006
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2006
// 	Riverbank Computing Limited <info@riverbankcomputing.co.uk>
// 
// This file is part of PyQt.
// 
// This copy of PyQt is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2, or (at your option) any later
// version.
// 
// PyQt is supplied in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
// 
// You should have received a copy of the GNU General Public License along with
// PyQt; see the file LICENSE.  If not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


class QHeaderView : QAbstractItemView
{

%TypeHeaderCode
#include <qheaderview.h>
%End

public:
    enum ResizeMode
    {
        Interactive,
        Stretch,
        Custom,
    };

    QHeaderView(Qt::Orientation orientation, QWidget *parent /TransferThis/ = 0);
    virtual ~QHeaderView();
    virtual void setModel(QAbstractItemModel *model);
    Qt::Orientation orientation() const;
    int offset() const;
    int length() const;
    virtual QSize sizeHint() const;
    int sectionSizeHint(int logicalIndex) const;
    int visualIndexAt(int position) const;
    int logicalIndexAt(int position) const;
    int sectionSize(int logicalIndex) const;
    int sectionPosition(int logicalIndex) const;
    int sectionViewportPosition(int logicalIndex) const;
    void moveSection(int from, int to);
    void resizeSection(int logicalIndex, int size);
    bool isSectionHidden(int logicalIndex) const;
    void setSectionHidden(int logicalIndex, bool hide);
    int count() const;
    int visualIndex(int logicalIndex) const;
    int logicalIndex(int visualIndex) const;
    void setMovable(bool movable);
    bool isMovable() const;
    void setClickable(bool clickable);
    bool isClickable() const;
    void setHighlightSections(bool highlight);
    bool highlightSections() const;
    void setResizeMode(QHeaderView::ResizeMode mode);
    void setResizeMode(int logicalIndex, QHeaderView::ResizeMode mode);
    QHeaderView::ResizeMode resizeMode(int logicalIndex) const;
    int stretchSectionCount() const;
    void setSortIndicatorShown(bool show);
    bool isSortIndicatorShown() const;
    void setSortIndicator(int logicalIndex, Qt::SortOrder order);
    int sortIndicatorSection() const;
    Qt::SortOrder sortIndicatorOrder() const;
    bool stretchLastSection() const;
    void setStretchLastSection(bool stretch);
    virtual void doItemsLayout();
    bool sectionsMoved() const;

public slots:
    void setOffset(int offset);
    void headerDataChanged(Qt::Orientation orientation, int logicalFirst, int logicalLast);

signals:
    void sectionMoved(int logicalIndex, int oldVisualIndex, int newVisualIndex);
    void sectionResized(int logicalIndex, int oldSize, int newSize);
    void sectionPressed(int logicalIndex);
    void sectionClicked(int logicalIndex);
    void sectionDoubleClicked(int logicalIndex);
    void sectionCountChanged(int oldCount, int newCount);
    void sectionHandleDoubleClicked(int logicalIndex);
    void sectionAutoResize(int logicalIndex, QHeaderView::ResizeMode mode);

protected slots:
    void updateSection(int logicalIndex);
    void resizeSections();
    void sectionsInserted(const QModelIndex &parent, int logicalFirst, int logicalLast);
    void sectionsAboutToBeRemoved(const QModelIndex &parent, int logicalFirst, int logicalLast);

protected:
    void initialize();
    void initializeSections();
    void initializeSections(int start, int end);
    virtual void currentChanged(const QModelIndex &current, const QModelIndex &old);
    virtual bool event(QEvent *e);
    virtual bool viewportEvent(QEvent *e);
    virtual void paintEvent(QPaintEvent *e);
    virtual void mousePressEvent(QMouseEvent *e);
    virtual void mouseMoveEvent(QMouseEvent *e);
    virtual void mouseReleaseEvent(QMouseEvent *e);
    virtual void mouseDoubleClickEvent(QMouseEvent *e);
    virtual void paintSection(QPainter *painter, const QRect &rect, int logicalIndex) const;
    virtual QSize sectionSizeFromContents(int logicalIndex) const;
    virtual int horizontalOffset() const;
    virtual int verticalOffset() const;
    virtual void updateGeometries();
    virtual void scrollContentsBy(int dx, int dy);
    virtual void dataChanged(const QModelIndex &topLeft, const QModelIndex &bottomRight);
    virtual void rowsInserted(const QModelIndex &parent, int start, int end);
    virtual QRect visualRect(const QModelIndex &index) const;
    virtual void scrollTo(const QModelIndex &index, QAbstractItemView::ScrollHint hint);
    virtual QModelIndex indexAt(const QPoint &p) const;
    virtual bool isIndexHidden(const QModelIndex &index) const;
    virtual QModelIndex moveCursor(QAbstractItemView::CursorAction, Qt::KeyboardModifiers);
    virtual void setSelection(const QRect &, QFlags<QItemSelectionModel::SelectionFlag>);
    virtual QRegion visualRegionForSelection(const QItemSelection &selection) const;

public:
    int logicalIndexAt(int ax, int ay) const;
    int logicalIndexAt(const QPoint &apos) const;
    void hideSection(int alogicalIndex);
    void showSection(int alogicalIndex);
    void resizeSections(QHeaderView::ResizeMode mode);
    int hiddenSectionCount() const;
    int defaultSectionSize() const;
    void setDefaultSectionSize(int size);
    Qt::Alignment defaultAlignment() const;
    void setDefaultAlignment(Qt::Alignment alignment);
    bool sectionsHidden() const;

private:
    QHeaderView(const QHeaderView &);
};
