// qmimedata.sip generated by MetaSIP on Wed Oct 11 03:37:27 2006
//
// This file is part of the QtCore Python extension module.
//
// Copyright (c) 2006
// 	Riverbank Computing Limited <info@riverbankcomputing.co.uk>
// 
// This file is part of PyQt.
// 
// This copy of PyQt is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2, or (at your option) any later
// version.
// 
// PyQt is supplied in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
// 
// You should have received a copy of the GNU General Public License along with
// PyQt; see the file LICENSE.  If not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


class QMimeData : QObject
{

%TypeHeaderCode
#include <qmimedata.h>
%End

public:
    QMimeData();
    virtual ~QMimeData();
    QList<QUrl> urls() const;
    void setUrls(const QList<QUrl> &urls);
    bool hasUrls() const;
    QString text() const;
    void setText(const QString &text);
    bool hasText() const;
    QString html() const;
    void setHtml(const QString &html);
    bool hasHtml() const;
    QVariant imageData() const;
    void setImageData(const QVariant &image);
    bool hasImage() const;
    QVariant colorData() const;
    void setColorData(const QVariant &color);
    bool hasColor() const;
    QByteArray data(const QString &mimetype) const;
    void setData(const QString &mimetype, const QByteArray &data);
    virtual bool hasFormat(const QString &mimetype) const;
    virtual QStringList formats() const;
    void clear();

protected:
    virtual QVariant retrieveData(const QString &mimetype, QVariant::Type preferredType) const;

private:
    QMimeData(const QMimeData &);
};
