// qsqlerror.sip generated by MetaSIP on Wed Oct 11 03:37:28 2006
//
// This file is part of the QtSql Python extension module.
//
// Copyright (c) 2006
// 	Riverbank Computing Limited <info@riverbankcomputing.co.uk>
// 
// This file is part of PyQt.
// 
// This copy of PyQt is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2, or (at your option) any later
// version.
// 
// PyQt is supplied in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
// 
// You should have received a copy of the GNU General Public License along with
// PyQt; see the file LICENSE.  If not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


class QSqlError
{

%TypeHeaderCode
#include <qsqlerror.h>
%End

public:
    enum ErrorType
    {
        NoError,
        ConnectionError,
        StatementError,
        TransactionError,
        UnknownError,
    };

    QSqlError(const QString &driverText = QString(), const QString &databaseText = QString(), QSqlError::ErrorType type = QSqlError::NoError, int number = -1);
    QSqlError(const QSqlError &other);
    ~QSqlError();
    QString driverText() const;
    void setDriverText(const QString &driverText);
    QString databaseText() const;
    void setDatabaseText(const QString &databaseText);
    QSqlError::ErrorType type() const;
    void setType(QSqlError::ErrorType type);
    int number() const;
    void setNumber(int number);
    QString text() const;
    bool isValid() const;
};
