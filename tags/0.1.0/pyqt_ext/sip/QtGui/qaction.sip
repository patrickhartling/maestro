// qaction.sip generated by MetaSIP on Wed Oct 11 03:37:27 2006
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2006
// 	Riverbank Computing Limited <info@riverbankcomputing.co.uk>
// 
// This file is part of PyQt.
// 
// This copy of PyQt is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2, or (at your option) any later
// version.
// 
// PyQt is supplied in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
// 
// You should have received a copy of the GNU General Public License along with
// PyQt; see the file LICENSE.  If not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


class QAction : QObject
{

%TypeHeaderCode
#include <qaction.h>
%End

public:
    explicit QAction(QObject *parent /TransferThis/);
    QAction(const QString &text, QObject *parent /TransferThis/);
    QAction(const QIcon &icon, const QString &text, QObject *parent /TransferThis/);
    virtual ~QAction();
    void setActionGroup(QActionGroup *group);
    QActionGroup *actionGroup() const;
    void setIcon(const QIcon &icon);
    QIcon icon() const;
    void setText(const QString &text);
    QString text() const;
    void setIconText(const QString &text);
    QString iconText() const;
    void setToolTip(const QString &tip);
    QString toolTip() const;
    void setStatusTip(const QString &statusTip);
    QString statusTip() const;
    void setWhatsThis(const QString &what);
    QString whatsThis() const;
    QMenu *menu() const;
    void setMenu(QMenu *menu);
    void setSeparator(bool b);
    bool isSeparator() const;
    void setShortcut(const QKeySequence &shortcut);
    QKeySequence shortcut() const;
    void setShortcutContext(Qt::ShortcutContext context);
    Qt::ShortcutContext shortcutContext() const;
    void setFont(const QFont &font);
    QFont font() const;
    void setCheckable(bool);
    bool isCheckable() const;
    QVariant data() const;
    void setData(const QVariant &var);
    bool isChecked() const;
    bool isEnabled() const;
    bool isVisible() const;

    enum ActionEvent
    {
        Trigger,
        Hover,
    };

    void activate(QAction::ActionEvent event);
    bool showStatusText(QWidget *widget = 0);
    QWidget *parentWidget() const;

protected:
    virtual bool event(QEvent *);

public slots:
    void trigger();
    void hover();
    void setChecked(bool);
    void toggle();
    void setEnabled(bool);
    void setDisabled(bool b);
    void setVisible(bool);

signals:
    void changed();
    void triggered(bool checked = false);
    void hovered();
    void toggled(bool);

private:
    QAction(const QAction &);
};
