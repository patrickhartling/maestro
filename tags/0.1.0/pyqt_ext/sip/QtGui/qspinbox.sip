// qspinbox.sip generated by MetaSIP on Wed Oct 11 03:37:27 2006
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2006
// 	Riverbank Computing Limited <info@riverbankcomputing.co.uk>
// 
// This file is part of PyQt.
// 
// This copy of PyQt is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2, or (at your option) any later
// version.
// 
// PyQt is supplied in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
// 
// You should have received a copy of the GNU General Public License along with
// PyQt; see the file LICENSE.  If not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


class QSpinBox : QAbstractSpinBox
{

%TypeHeaderCode
#include <qspinbox.h>
%End

public:
    explicit QSpinBox(QWidget *parent /TransferThis/ = 0);
    int value() const;
    QString prefix() const;
    void setPrefix(const QString &p);
    QString suffix() const;
    void setSuffix(const QString &s);
    QString cleanText() const;
    int singleStep() const;
    void setSingleStep(int val);
    int minimum() const;
    void setMinimum(int min);
    int maximum() const;
    void setMaximum(int max);
    void setRange(int min, int max);

protected:
    virtual QValidator::State validate(QString &input, int &pos /In, Out/) const;
    virtual int valueFromText(const QString &text) const;
    virtual QString textFromValue(int v) const;
    virtual void fixup(QString &str) const;
    virtual bool event(QEvent *e);

public slots:
    void setValue(int val);

signals:
    void valueChanged(int);
    void valueChanged(const QString &);

private:
    QSpinBox(const QSpinBox &);
};

class QDoubleSpinBox : QAbstractSpinBox
{

%TypeHeaderCode
#include <qspinbox.h>
%End

public:
    explicit QDoubleSpinBox(QWidget *parent /TransferThis/ = 0);
    double value() const;
    QString prefix() const;
    void setPrefix(const QString &p);
    QString suffix() const;
    void setSuffix(const QString &s);
    QString cleanText() const;
    double singleStep() const;
    void setSingleStep(double val);
    double minimum() const;
    void setMinimum(double min);
    double maximum() const;
    void setMaximum(double max);
    void setRange(double min, double max);
    int decimals() const;
    void setDecimals(int prec);
    virtual QValidator::State validate(QString &input, int &pos) const;
    virtual double valueFromText(const QString &text) const;
    virtual QString textFromValue(double v) const;
    virtual void fixup(QString &str) const;

public slots:
    void setValue(double val);

signals:
    void valueChanged(double);
    void valueChanged(const QString &);

private:
    QDoubleSpinBox(const QDoubleSpinBox &);
};
