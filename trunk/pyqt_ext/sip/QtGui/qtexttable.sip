// qtexttable.sip generated by MetaSIP on Wed Oct 11 03:37:27 2006
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2006
// 	Riverbank Computing Limited <info@riverbankcomputing.co.uk>
// 
// This file is part of PyQt.
// 
// This copy of PyQt is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2, or (at your option) any later
// version.
// 
// PyQt is supplied in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
// 
// You should have received a copy of the GNU General Public License along with
// PyQt; see the file LICENSE.  If not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


class QTextTableCell
{

%TypeHeaderCode
#include <qtexttable.h>
%End

public:
    QTextTableCell();
    ~QTextTableCell();
    QTextTableCell(const QTextTableCell &o);
    QTextCharFormat format() const;
    int row() const;
    int column() const;
    int rowSpan() const;
    int columnSpan() const;
    bool isValid() const;
    QTextCursor firstCursorPosition() const;
    QTextCursor lastCursorPosition() const;
    bool operator==(const QTextTableCell &other) const;
    bool operator!=(const QTextTableCell &other) const;
};

class QTextTable : QTextFrame
{

%TypeHeaderCode
#include <qtexttable.h>
%End

public:
    explicit QTextTable(QTextDocument *doc);
    virtual ~QTextTable();
    void resize(int rows, int cols);
    void insertRows(int pos, int num);
    void insertColumns(int pos, int num);
    void removeRows(int pos, int num);
    void removeColumns(int pos, int num);
    void mergeCells(int row, int col, int numRows, int numCols);
    void mergeCells(const QTextCursor &cursor);
    void splitCell(int row, int col, int numRows, int numCols);
    int rows() const;
    int columns() const;
    QTextTableCell cellAt(int row, int col) const;
    QTextTableCell cellAt(int position) const;
    QTextTableCell cellAt(const QTextCursor &c) const;
    QTextCursor rowStart(const QTextCursor &c) const;
    QTextCursor rowEnd(const QTextCursor &c) const;
    QTextTableFormat format() const;
    void setFormat(const QTextTableFormat &aformat);

private:
    QTextTable(const QTextTable &);
};
