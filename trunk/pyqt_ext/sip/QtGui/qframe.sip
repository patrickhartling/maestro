// qframe.sip generated by MetaSIP on Wed Oct 11 03:37:27 2006
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2006
// 	Riverbank Computing Limited <info@riverbankcomputing.co.uk>
// 
// This file is part of PyQt.
// 
// This copy of PyQt is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2, or (at your option) any later
// version.
// 
// PyQt is supplied in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
// 
// You should have received a copy of the GNU General Public License along with
// PyQt; see the file LICENSE.  If not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


class QFrame : QWidget
{

%TypeHeaderCode
#include <qframe.h>
%End

public:
    QFrame(QWidget *parent /TransferThis/ = 0, Qt::WFlags f = 0);
    virtual ~QFrame();
    int frameStyle() const;
    void setFrameStyle(int);
    int frameWidth() const;
    virtual QSize sizeHint() const;

    enum Shape
    {
        NoFrame,
        Box,
        Panel,
        WinPanel,
        HLine,
        VLine,
        StyledPanel,
    };

    enum Shadow
    {
        Plain,
        Raised,
        Sunken,
    };

    QFrame::Shape frameShape() const;
    void setFrameShape(QFrame::Shape);
    QFrame::Shadow frameShadow() const;
    void setFrameShadow(QFrame::Shadow);
    int lineWidth() const;
    void setLineWidth(int);
    int midLineWidth() const;
    void setMidLineWidth(int);
    QRect frameRect() const;
    void setFrameRect(const QRect &);

protected:
    virtual bool event(QEvent *e);
    virtual void paintEvent(QPaintEvent *);
    virtual void changeEvent(QEvent *);
    void drawFrame(QPainter *);

private:
    QFrame(const QFrame &);
};
